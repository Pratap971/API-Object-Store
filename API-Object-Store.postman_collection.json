{
	"info": {
		"_postman_id": "8db06cb4-320c-48c6-8496-d05b0cd8f75b",
		"name": "API-Object-Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "14005510",
		"_collection_link": "https://crimson-resonance-679749.postman.co/workspace/pratap~01ccb2bd-c299-4f2a-bc2c-2fb28fad1322/collection/14005510-8db06cb4-320c-48c6-8496-d05b0cd8f75b?action=share&source=collection_link&creator=14005510"
	},
	"item": [
		{
			"name": "GET Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    const requiredFields = [",
							"        \"gender\",",
							"        \"name\",",
							"        \"location\",",
							"        \"email\",",
							"        \"login\",",
							"        \"dob\",",
							"        \"registered\",",
							"        \"phone\",",
							"        \"cell\",",
							"        \"id\",",
							"        \"picture\",",
							"        \"nat\"",
							"    ];",
							"",
							"    requiredFields.forEach(field => {",
							"        pm.expect(responseData).to.have.property(field);",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Results array is present and contains at least one element\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.results).to.be.an('array').and.to.have.lengthOf.at.least(1, \"Results array should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Email format is valid\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.results[0].email).to.match(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/);",
							"});",
							"",
							"",
							"pm.test(\"Location object contains all required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.results).to.be.an('array');",
							"    responseData.results.forEach(function (result) {",
							"        pm.expect(result.location).to.be.an('object');",
							"        pm.expect(result.location.street).to.exist.and.to.be.an('object');",
							"        pm.expect(result.location.city).to.exist.and.to.be.a('string');",
							"        pm.expect(result.location.state).to.exist.and.to.be.a('string');",
							"        pm.expect(result.location.country).to.exist.and.to.be.a('string');",
							"        pm.expect(result.location.postcode).to.exist.and.to.be.a('number');",
							"        pm.expect(result.location.coordinates).to.exist.and.to.be.an('object');",
							"        pm.expect(result.location.timezone).to.exist.and.to.be.an('object');",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://randomuser.me/api/"
			},
			"response": []
		},
		{
			"name": "POST  Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData).to.have.property('id');",
							"  pm.expect(responseData).to.have.property('name');",
							"  pm.expect(responseData).to.have.property('createdAt');",
							"  pm.expect(responseData).to.have.property('data');",
							"});",
							"",
							"",
							"pm.test(\"Data object contains expected fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.data).to.be.an('object');",
							"    pm.expect(responseData.data).to.include.all.keys('year', 'price', 'CPU model', 'Hard disk size');",
							"});",
							"",
							"",
							"pm.test(\"Id is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");",
							"});",
							"",
							"pm.test(\"Year is a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.data.year).to.be.a('number').and.to.be.at.least(0, \"Year should be a non-negative integer\");",
							"});",
							"",
							"pm.test(\"Price is a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.expect(responseData.data.price).to.be.a('number').and.to.be.at.least(0, \"Price should be a non-negative integer\");",
							"});",
							"",
							"",
							"pm.test(\"CreatedAt is in a valid date format\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.createdAt).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Apple MacBook Pro 16\",\r\n   \"data\": {\r\n      \"year\": 2019,\r\n      \"price\": 1849.99,\r\n      \"CPU model\": \"Intel Core i9\",\r\n      \"Hard disk size\": \"1 TB\"\r\n   }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://api.restful-api.dev/objects"
			},
			"response": []
		},
		{
			"name": "PUT  Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {",
							"    pm.expect(pm.response.code).to.equal(404);",
							"});",
							"",
							"",
							"pm.test(\"Error field exists in the response\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.error).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Response body is not empty\", function () {",
							"  const responseData = pm.response.json();",
							"  pm.expect(responseData).to.not.be.empty;",
							"});",
							"",
							"",
							"pm.test(\"Verify the request URL is correct\", function () {",
							"    pm.expect(pm.request.url).to.equal(\"https://api.restful-api.dev/objects/ff808181932badb60194e98b04f873e5\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Apple MacBook Pro 15\",\r\n   \"data\": {\r\n      \"year\": 2019,\r\n      \"price\": 1849.99,\r\n      \"CPU model\": \"Intel Core i9\",\r\n      \"Hard disk size\": \"2 TB\"\r\n   }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://api.restful-api.dev/objects/ff808181932badb60194e98b04f873e5"
			},
			"response": []
		},
		{
			"name": "DELETE  Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {",
							"    pm.expect(pm.response.code).to.equal(404);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.error).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Error message is not empty\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.error).to.exist.and.to.not.be.empty;",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Verify that the response body is not empty\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.not.be.empty;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "https://api.restful-api.dev/objects/ff808181932badb60194e98b04f873e5"
			},
			"response": []
		}
	]
}